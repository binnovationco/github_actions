name: k8s Destroy
on:
  workflow_call:
    secrets:
      APP_NAME:
        required: true
      DIGITALOCEAN_ACCESS_TOKEN:
        required: true
      KUBECONFIG_YML:
        required: true
      CLUSTER_NAME:
        required: true
      DATABASE_EXTERNAL_HOST:
        required: true
      DATABASE_PORT:
        required: true
      DATABASE_USERNAME:
        required: true
      DATABASE_PASSWORD:
        required: true
      GH_PACKAGES_PAT:
        required: true
jobs:
  delete_k8s_namespace:
    if: ${{ github.event.ref_type == 'branch' || (github.event_name == 'pull_request' && github.event.action == 'closed') }}
    env:
      IMAGE_NAME: ${{ secrets.APP_NAME }}
    name: Remove k8s namespace
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          if [ ${GITHUB_EVENT_NAME} == 'pull_request' ];
          then
              GIT_BRANCH=pr-$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          else
              GIT_BRANCH=${{ github.event.ref }}
              GIT_BRANCH=${GIT_BRANCH//\./-}
              GIT_BRANCH=${GIT_BRANCH//\//-}
              GIT_BRANCH=${GIT_BRANCH//\_/-}
          fi
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Clean up packages
        uses: snok/container-retention-policy@v1
        continue-on-error: true
        with:
          image-names: ${{ github.repository.name }}/${{ env.IMAGE_NAME }}_${{ env.GIT_BRANCH }}
          cut-off: 1 week ago UTC
          timestamp-to-use: updated_at
          account-type: org
          org-name: binnovationco
          keep-at-least: 3
          token: ${{ secrets.GH_PACKAGES_PAT }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Create kubeconfig.yml
        run: |
            echo ${{ secrets.KUBECONFIG_YML }} | base64 -d >> kubeconfig.yml
        shell: bash

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Remove k8s namespace
        continue-on-error: true
        run: kubectl delete namespace ${{ env.IMAGE_NAME }}-${{ env.GIT_BRANCH }}

      - name: Remove database schema
        continue-on-error: true
        run: |
          mysql -h ${{ secrets.DATABASE_EXTERNAL_HOST }} -P ${{ secrets.DATABASE_PORT }} -u ${{ secrets.DATABASE_USERNAME }} --password=${{ secrets.DATABASE_PASSWORD }} -e 'drop schema "${{ env.IMAGE_NAME }}_${{ env.GIT_BRANCH }}";'

      # - name: Clean up packages
      #   uses: actions/delete-package-versions@v2
      #   with: 
      #     package-name: ${{ env.IMAGE_NAME }}_${{ env.GIT_BRANCH }}
      #     min-versions-to-keep: 0
      #     token: ${{ secrets.GH_SECRET }}

      